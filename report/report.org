#+TITLE: Results simulation study DelayedGSD
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Path
if(Sys.info()["login"] == "bozenne"){
}else if(Sys.info()["login"] == "hpl802"){
  setwd("x:/DelayedGSD/")
}

options(width = 120, digits = 4)

library(data.table)
library(ggplot2)
library(xtable)

dec2pc <- function(x, digits = 2){
  ## dec2pc(c(1/3,1/4,1/5,1/10,1/100,1/200,1/2000,1/20000,0))
  out <- paste0(formatC(100*x, format='f', digits = digits), "%")
  if(any(round(100*x,digits)==0)){
    out[round(100*x,digits)==0] <- paste0("<0.",rep(0,digits-1),"1%")
  }
  if(any(abs(x)<1e-12)){
    out[abs(x)<1e-12] <- "0"
  }
  return(out)
}

mean2pc <- function(x, digits = 2){
  out <- dec2pc(mean(x, na.rm = TRUE), digits = digits)
  if(any(is.na(x))){
    out <- paste0(out," (NA: ",dec2pc(mean(is.na(x)), digits = digits),")")
  }
  return(out)
}
ciNA <- function(x, digits = 4){
  if(all(is.na(x))){
    out <- as.character(NA)
  }else if(any(is.na(x))){
    out <- paste0("[",round(min(x, na.rm = TRUE), digits = digits),
                  ";",round(max(x, na.rm = TRUE), digits = digits),
                  "] NA = ",sum(is.na(x)))
  }else{
    out <- paste0("[",round(min(x), digits = digits),
                  ";",round(max(x), digits = digits),
                  "]")
  }
  return(out)
}
#+END_SRC

#+RESULTS:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res2stage <- readRDS(file.path("Results-built","res2stage.rds"))
res2stage[, method.char := paste0("method ",method)]
res2stage[, stage.char := factor(stage, 1:2, c("interim","final"))]
res2stage[, truth := ifelse(hypo=="power",0.6,0)]

res2stage.conclusion <-  merge(x = res2stage[decision %in% c("efficacy","futility"), .(stage.conclusion=stage,conclusion=decision), by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")],
                               y = res2stage[type == "interim", .(stage.interim=stage,decision.interim=decision,reason.interim=reason), by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")],
                               by = c("method","scenario","seed","missing","binding","fixC","ar","hypo"))
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res3stage <- readRDS(file.path("Results-built","res3stage.rds"))
res3stage[, method.char := paste0("method ",method)]
res3stage[, stage.char := factor(stage, 1:3, c("interim 1","interim 2","final"))]
res3stage[, truth := ifelse(hypo=="power",0.6,0)]
res3stage[, decisionReason := paste0(decision,": ",reason)]

res3stage.conclusion <-  merge(x = res3stage[decision %in% c("efficacy","futility"), .(stage.conclusion=stage,conclusion=decision), by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")],
                               y = res3stage[type == "interim", .(stage.interim=tail(stage,1),decision.interim=tail(decision,1),reason.interim=tail(reason,1)), by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")],
                               by = c("method","scenario","seed","missing","binding","fixC","ar","hypo"))
#+END_SRC

#+RESULTS:


* Overview scenario :noexport:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
path.results <- file.path("x:/DelayedGSD","Results")

dir.2stage <- grep("2stage",list.dirs(path = path.results), value = TRUE)
dir.2stage.output <- gsub("Results","output",dir.2stage)
ls.2stage.output1 <- lapply(dir.2stage.output, function(iDir){readLines(file.path(iDir,list.files(iDir)[1]))})
vec.2stage.lineSample <- sapply(ls.2stage.output1, function(iOut){iOut[grepl("^Sample size:",iOut, fixed = FALSE)]})
M.2stage.sampleSize <- do.call(rbind,lapply(lapply(strsplit(gsub("Sample size: ","",vec.2stage.lineSample), split = ","),trimws),as.numeric))
df.2stage.sampleSize <- data.frame(file = gsub("x:/DelayedGSD/output/2stage_","",dir.2stage.output), sample.size = M.2stage.sampleSize[,1])

range(df.2stage.sampleSize$sample.size)
res3stage[type == "final",range(completeData)]
#+END_SRC

#+RESULTS:
: [1] 656 741
: [1] 664 674


* Rejection rate

** 2 stages
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res2stage.rejection <- res2stage[,.(n.stage = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res2stageS.rejection <- res2stage.rejection[,.(n.sim = .N, rejectionRate = dec2pc(mean(rejection))),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:


Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
table2stage.PrintH1 <- dcast(res2stageS.rejection[hypo=="power"],
                             scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                             value.var = "rejectionRate")
print(table2stage.PrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10   90.43%   90.37%   90.18%
        3 10000    TRUE    TRUE FALSE  5   90.13%   90.11%   89.78%
        5 10000    TRUE    TRUE  TRUE 10   90.00%   90.10%   90.18%
        7 10000    TRUE    TRUE  TRUE  5   89.73%   89.79%   89.78%
        9  9900    TRUE   FALSE  TRUE 10   90.20%   90.33%   90.41%
       11  9900    TRUE   FALSE  TRUE  5   90.31%   90.47%   90.46%
       13  9900    TRUE   FALSE FALSE 10   90.74%   90.67%   90.41%
       15  9900    TRUE   FALSE FALSE  5   90.67%   90.66%   90.46%
       17 10000   FALSE    TRUE FALSE  5   90.38%   90.38%   90.09%
#+end_example

\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
table2stage.PrintH0 <- dcast(res2stageS.rejection[hypo=="typeI"],
                      scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(table2stage.PrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10    2.76%    2.75%    2.68%
        4 10000    TRUE    TRUE FALSE  5    2.72%    2.72%    2.70%
        6 10000    TRUE    TRUE  TRUE 10    2.56%    2.56%    2.68%
        8 10000    TRUE    TRUE  TRUE  5    2.62%    2.62%    2.70%
       10 10000    TRUE   FALSE  TRUE 10    2.14%    2.15%    2.33%
       12 10000    TRUE   FALSE  TRUE  5    2.29%    2.30%    2.34%
       14 10000    TRUE   FALSE FALSE 10    2.29%    2.27%    2.33%
       16 10000    TRUE   FALSE FALSE  5    2.36%    2.36%    2.34%
       18  9900   FALSE    TRUE FALSE  5    2.70%    2.70%    2.66%
#+end_example

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Distribution of the p-value:
gg2stage.P <- ggplot(res2stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg2stage.P <- gg2stage.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg2stage.P <- gg2stage.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg2stage.P <- gg2stage.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg2stage.P <- gg2stage.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg2stage.P, filename = file.path("report","figures","gg2stage-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 375343 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 375343 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg2stage-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg2stage.P2 <- ggplot(res2stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg2stage.P2 <- gg2stage.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg2stage.P2 <- gg2stage.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg2stage.P2 <- gg2stage.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg2stage.P2 <- gg2stage.P2 + coord_cartesian(xlim = c(0,0.05))
gg2stage.P2 <- gg2stage.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg2stage.P2, filename = file.path("report","figures","gg2stage-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 412131 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 412131 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg2stage-pvalue2-density.pdf]]

\clearpage

** 3 stages

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res3stage.rejection <- res3stage[,.(n.stage = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res3stageS.rejection <- res3stage.rejection[,.(n.sim = .N, rejectionRate = dec2pc(mean(rejection))),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
table3stage.PrintH1 <- dcast(res3stageS.rejection[hypo=="power"],
                             scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                             value.var = "rejectionRate")
print(table3stage.PrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10   90.96%   90.85%   90.44%
        3 10000    TRUE    TRUE FALSE  5   90.62%   90.61%   90.28%
        5 10000    TRUE    TRUE  TRUE 10   90.30%   90.44%   90.44%
        7 10000    TRUE    TRUE  TRUE  5   90.21%   90.34%   90.28%
        9 10000    TRUE   FALSE  TRUE 10   90.01%   90.27%   90.40%
       11 10000    TRUE   FALSE  TRUE  5   89.94%   90.12%   90.04%
       13 10000    TRUE   FALSE FALSE 10   90.60%   90.49%   90.40%
       15 10000    TRUE   FALSE FALSE  5   90.31%   90.31%   90.04%
       17 10000   FALSE    TRUE FALSE  5   89.85%   89.81%   89.57%
#+end_example


\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
table3stage.PrintH0 <- dcast(res3stageS.rejection[hypo=="typeI"],
                             scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                             value.var = "rejectionRate")
print(table3stage.PrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10    2.46%    2.51%    2.44%
        4 10000    TRUE    TRUE FALSE  5    2.52%    2.52%    2.49%
        6 10000    TRUE    TRUE  TRUE 10    2.25%    2.24%    2.44%
        8 10000    TRUE    TRUE  TRUE  5    2.41%    2.43%    2.49%
       10  9931    TRUE   FALSE  TRUE 10    2.30%    2.32%    2.47%
       12 10000    TRUE   FALSE  TRUE  5    2.50%    2.51%    2.64%
       14  9931    TRUE   FALSE FALSE 10    2.45%    2.42%    2.47%
       16 10000    TRUE   FALSE FALSE  5    2.52%    2.52%    2.64%
       18 10000   FALSE    TRUE FALSE  5    2.65%    2.65%    2.52%
#+end_example

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Distribution of the p-value:
gg3stage.P <- ggplot(res3stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg3stage.P <- gg3stage.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg3stage.P <- gg3stage.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg3stage.P <- gg3stage.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg3stage.P <- gg3stage.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg3stage.P, filename = file.path("report","figures","gg3stage-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 471271 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 471271 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg3stage-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg3stage.P2 <- ggplot(res3stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg3stage.P2 <- gg3stage.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg3stage.P2 <- gg3stage.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg3stage.P2 <- gg3stage.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg3stage.P2 <- gg3stage.P2 + coord_cartesian(xlim = c(0,0.05))
gg3stage.P2 <- gg3stage.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg3stage.P2, filename = file.path("report","figures","gg-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 461131 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 461131 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg-pvalue2-density.pdf]]

\clearpage

* Conclusion of the trial

** 2 stages
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stageS.final <- res2stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                decision.eff = mean2pc((stage == 1)*(decision == "efficacy")),
                                decision.fut = mean2pc((stage == 1)*(decision == "futility")),
                                final.eff = mean2pc((stage == 2)*(decision == "efficacy")),
                                final.fut = mean2pc((stage == 2)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10       51.23%        2.90%    39.20%     6.67%
 2: 10000    TRUE typeI    TRUE FALSE 10        0.86%       71.79%     1.90%    25.45%
 3: 10000    TRUE power    TRUE FALSE  5       48.74%        2.99%    41.39%     6.88%
 4: 10000    TRUE typeI    TRUE FALSE  5        0.81%       69.49%     1.91%    27.79%
 5: 10000    TRUE power    TRUE  TRUE 10       50.80%        3.33%    39.20%     6.67%
 6: 10000    TRUE typeI    TRUE  TRUE 10        0.66%       71.99%     1.90%    25.45%
 7: 10000    TRUE power    TRUE  TRUE  5       48.34%        3.39%    41.39%     6.88%
 8: 10000    TRUE typeI    TRUE  TRUE  5        0.71%       69.59%     1.91%    27.79%
 9:  9900    TRUE power   FALSE  TRUE 10       50.62%        3.70%    39.59%     6.10%
10: 10000    TRUE typeI   FALSE  TRUE 10        0.45%        0.23%     1.69%    97.63%
11:  9900    TRUE power   FALSE  TRUE  5       48.34%        3.47%    41.97%     6.21%
12: 10000    TRUE typeI   FALSE  TRUE  5        0.55%        0.09%     1.74%    97.62%
13:  9900    TRUE power   FALSE FALSE 10       51.15%        3.16%    39.59%     6.10%
14: 10000    TRUE typeI   FALSE FALSE 10        0.60%        0.08%     1.69%    97.63%
15:  9900    TRUE power   FALSE FALSE  5       48.70%        3.12%    41.97%     6.21%
16: 10000    TRUE typeI   FALSE FALSE  5        0.62%        0.02%     1.74%    97.62%
17: 10000   FALSE power    TRUE FALSE  5       47.04%        2.46%    43.34%     7.16%
18:  9900   FALSE typeI    TRUE FALSE  5        0.82%       67.88%     1.88%    29.42%
#+end_example

\clearpage

Method 2:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10       51.29%        3.13%    39.08%     6.50%
 2: 10000    TRUE typeI    TRUE FALSE 10        0.86%       72.69%     1.89%    24.56%
 3: 10000    TRUE power    TRUE FALSE  5       48.74%        3.01%    41.37%     6.88%
 4: 10000    TRUE typeI    TRUE FALSE  5        0.82%       69.59%     1.90%    27.69%
 5: 10000    TRUE power    TRUE  TRUE 10       50.50%        2.92%    39.60%     6.98%
 6: 10000    TRUE typeI    TRUE  TRUE 10        0.66%       70.13%     1.90%    27.31%
 7: 10000    TRUE power    TRUE  TRUE  5       48.22%        3.19%    41.57%     7.02%
 8: 10000    TRUE typeI    TRUE  TRUE  5        0.69%       68.11%     1.93%    29.27%
 9:  9900    TRUE power   FALSE  TRUE 10       50.46%        3.36%    39.87%     6.30%
10: 10000    TRUE typeI   FALSE  TRUE 10        0.44%        0.23%     1.71%    97.62%
11:  9900    TRUE power   FALSE  TRUE  5       48.22%        3.18%    42.25%     6.34%
12: 10000    TRUE typeI   FALSE  TRUE  5        0.55%        0.09%     1.75%    97.61%
13:  9900    TRUE power   FALSE FALSE 10       51.20%        3.32%    39.46%     6.01%
14: 10000    TRUE typeI   FALSE FALSE 10        0.58%        0.10%     1.69%    97.63%
15:  9900    TRUE power   FALSE FALSE  5       48.71%        3.14%    41.95%     6.20%
16: 10000    TRUE typeI   FALSE FALSE  5        0.62%        0.02%     1.74%    97.62%
17: 10000   FALSE power    TRUE FALSE  5       47.04%        2.46%    43.34%     7.16%
18:  9900   FALSE typeI    TRUE FALSE  5        0.82%       67.97%     1.88%    29.33%
#+end_example

Method 3:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC
#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10       54.76%        3.19%    35.42%     6.63%
 2: 10000    TRUE typeI    TRUE FALSE 10        0.88%       68.45%     1.80%    28.87%
 3: 10000    TRUE power    TRUE FALSE  5       49.73%        3.32%    40.05%     6.90%
 4: 10000    TRUE typeI    TRUE FALSE  5        0.80%       67.87%     1.90%    29.43%
 5: 10000    TRUE power    TRUE  TRUE 10       54.76%        3.19%    35.42%     6.63%
 6: 10000    TRUE typeI    TRUE  TRUE 10        0.88%       68.45%     1.80%    28.87%
 7: 10000    TRUE power    TRUE  TRUE  5       49.73%        3.32%    40.05%     6.90%
 8: 10000    TRUE typeI    TRUE  TRUE  5        0.80%       67.87%     1.90%    29.43%
 9:  9900    TRUE power   FALSE  TRUE 10       54.39%        3.44%    36.02%     6.14%
10: 10000    TRUE typeI   FALSE  TRUE 10        0.61%        0.36%     1.72%    97.31%
11:  9900    TRUE power   FALSE  TRUE  5       49.62%        3.29%    40.85%     6.24%
12: 10000    TRUE typeI   FALSE  TRUE  5        0.59%        0.13%     1.75%    97.53%
13:  9900    TRUE power   FALSE FALSE 10       54.39%        3.44%    36.02%     6.14%
14: 10000    TRUE typeI   FALSE FALSE 10        0.61%        0.36%     1.72%    97.31%
15:  9900    TRUE power   FALSE FALSE  5       49.62%        3.29%    40.85%     6.24%
16: 10000    TRUE typeI   FALSE FALSE  5        0.59%        0.13%     1.75%    97.53%
17: 10000   FALSE power    TRUE FALSE  5       47.93%        2.75%    42.16%     7.16%
18:  9900   FALSE typeI    TRUE FALSE  5        0.77%       66.12%     1.89%    31.22%
#+end_example

\clearpage

Relative frequency of stopping for with a threshold below 1.96:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- res2stage[decision %in% c("efficacy","futility"),
                        .(.N, rejection = mean2pc(decision=="efficacy"), rejectionBelow196 = mean2pc((statistic<qnorm(0.975))*(decision=="efficacy"))), 
                        by = c("scenario","missing","method","binding","fixC","ar","hypo")]
tablePrint[rejectionBelow196!="0"]
#+END_SRC

#+RESULTS:
#+begin_example
    scenario missing method binding  fixC ar  hypo     N rejection rejectionBelow196
 1:        1    TRUE      1    TRUE FALSE 10 power 10000    90.43%             0.43%
 2:        1    TRUE      2    TRUE FALSE 10 power 10000    90.37%             0.47%
 3:        2    TRUE      1    TRUE FALSE 10 typeI 10000     2.76%             0.20%
 4:        2    TRUE      2    TRUE FALSE 10 typeI 10000     2.75%             0.20%
 5:        3    TRUE      1    TRUE FALSE  5 power 10000    90.13%             0.40%
 6:        3    TRUE      2    TRUE FALSE  5 power 10000    90.11%             0.40%
 7:        4    TRUE      1    TRUE FALSE  5 typeI 10000     2.72%             0.10%
 8:        4    TRUE      2    TRUE FALSE  5 typeI 10000     2.72%             0.10%
 9:       13    TRUE      1   FALSE FALSE 10 power  9900    90.74%             0.54%
10:       13    TRUE      2   FALSE FALSE 10 power  9900    90.67%             0.56%
11:       14    TRUE      1   FALSE FALSE 10 typeI 10000     2.29%             0.15%
12:       14    TRUE      2   FALSE FALSE 10 typeI 10000     2.27%             0.13%
13:       15    TRUE      1   FALSE FALSE  5 power  9900    90.67%             0.35%
14:       15    TRUE      2   FALSE FALSE  5 power  9900    90.66%             0.36%
15:       16    TRUE      1   FALSE FALSE  5 typeI 10000     2.36%             0.07%
16:       16    TRUE      2   FALSE FALSE  5 typeI 10000     2.36%             0.07%
17:       17   FALSE      1    TRUE FALSE  5 power 10000    90.38%             0.43%
18:       17   FALSE      2    TRUE FALSE  5 power 10000    90.38%             0.43%
19:       18   FALSE      1    TRUE FALSE  5 typeI  9900     2.70%             0.10%
20:       18   FALSE      2    TRUE FALSE  5 typeI  9900     2.70%             0.10%
#+end_example

\clearpage

** 3 stages
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res3stageS.final <- res3stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                dec1.eff = mean2pc((stage == 1)*(decision == "efficacy")),
                                dec1.fut = mean2pc((stage == 1)*(decision == "futility")),
                                dec2.eff = mean2pc((stage == 2)*(decision == "efficacy")),
                                dec2.fut = mean2pc((stage == 2)*(decision == "futility")),
                                final.eff = mean2pc((stage == 3)*(decision == "efficacy")),
                                final.fut = mean2pc((stage == 3)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res3stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("dec1.eff","dec1.fut","dec2.eff","dec2.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar dec1.eff dec1.fut dec2.eff dec2.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10   28.83%    1.34%   34.78%    2.69%    27.35%     5.01%
 2: 10000    TRUE typeI    TRUE FALSE 10    0.47%   47.36%    0.63%   35.07%     1.36%    15.11%
 3: 10000    TRUE power    TRUE FALSE  5   26.51%    1.38%   34.74%    2.85%    29.37%     5.15%
 4: 10000    TRUE typeI    TRUE FALSE  5    0.44%   44.88%    0.69%   35.90%     1.39%    16.70%
 5: 10000    TRUE power    TRUE  TRUE 10   28.46%    1.71%   34.49%    2.98%    27.35%     5.01%
 6: 10000    TRUE typeI    TRUE  TRUE 10    0.34%   47.49%    0.55%   35.15%     1.36%    15.11%
 7: 10000    TRUE power    TRUE  TRUE  5   26.31%    1.58%   34.53%    3.06%    29.37%     5.15%
 8: 10000    TRUE typeI    TRUE  TRUE  5    0.41%   44.91%    0.61%   35.98%     1.39%    16.70%
 9: 10000    TRUE power   FALSE  TRUE 10   28.18%    1.89%   35.13%    2.93%    26.70%     5.17%
10:  9931    TRUE typeI   FALSE  TRUE 10    0.35%    0.14%    0.49%    0.40%     1.45%    97.16%
11: 10000    TRUE power   FALSE  TRUE  5   26.02%    1.75%   35.41%    2.97%    28.51%     5.34%
12: 10000    TRUE typeI   FALSE  TRUE  5    0.42%    0.01%    0.58%    0.08%     1.50%    97.41%
13: 10000    TRUE power   FALSE FALSE 10   28.52%    1.55%   35.38%    2.68%    26.70%     5.17%
14:  9931    TRUE typeI   FALSE FALSE 10    0.44%    0.05%    0.55%    0.34%     1.45%    97.16%
15: 10000    TRUE power   FALSE FALSE  5   26.21%    1.56%   35.59%    2.79%    28.51%     5.34%
16: 10000    TRUE typeI   FALSE FALSE  5    0.43%        0    0.59%    0.07%     1.50%    97.41%
17: 10000   FALSE power    TRUE FALSE  5   25.38%    1.48%   34.27%    2.45%    30.20%     6.22%
18: 10000   FALSE typeI    TRUE FALSE  5    0.35%   42.84%    0.67%   36.11%     1.63%    18.40%
#+end_example

- Method 2
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res3stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("dec1.eff","dec1.fut","dec2.eff","dec2.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar dec1.eff dec1.fut dec2.eff dec2.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10   28.87%    1.42%   34.79%    2.82%    27.19%     4.91%
 2: 10000    TRUE typeI    TRUE FALSE 10    0.47%   47.79%    0.65%   35.40%     1.39%    14.30%
 3: 10000    TRUE power    TRUE FALSE  5   26.53%    1.38%   34.80%    2.86%    29.28%     5.15%
 4: 10000    TRUE typeI    TRUE FALSE  5    0.44%   44.92%    0.69%   35.99%     1.39%    16.57%
 5: 10000    TRUE power    TRUE  TRUE 10   28.18%    1.51%   34.40%    2.85%    27.86%     5.20%
 6: 10000    TRUE typeI    TRUE  TRUE 10    0.33%   44.96%    0.53%   36.43%     1.38%    16.37%
 7: 10000    TRUE power    TRUE  TRUE  5   26.18%    1.41%   34.45%    2.84%    29.71%     5.41%
 8: 10000    TRUE typeI    TRUE  TRUE  5    0.41%   43.53%    0.59%   36.40%     1.43%    17.64%
 9: 10000    TRUE power   FALSE  TRUE 10   28.03%    1.62%   35.14%    2.82%    27.10%     5.29%
10:  9931    TRUE typeI   FALSE  TRUE 10    0.35%    0.12%    0.48%    0.35%     1.48%    97.21%
11: 10000    TRUE power   FALSE  TRUE  5   25.81%    1.60%   35.45%    2.72%    28.86%     5.56%
12: 10000    TRUE typeI   FALSE  TRUE  5    0.40%    0.01%    0.59%    0.07%     1.52%    97.41%
13: 10000    TRUE power   FALSE FALSE 10   28.53%    1.61%   35.47%    2.88%    26.49%     5.02%
14:  9931    TRUE typeI   FALSE FALSE 10    0.44%    0.05%    0.52%    0.40%     1.45%    97.13%
15: 10000    TRUE power   FALSE FALSE  5   26.21%    1.56%   35.66%    2.81%    28.44%     5.32%
16: 10000    TRUE typeI   FALSE FALSE  5    0.43%        0    0.60%    0.07%     1.49%    97.41%
17: 10000   FALSE power    TRUE FALSE  5   25.42%    1.50%   34.24%    2.50%    30.15%     6.19%
18: 10000   FALSE typeI    TRUE FALSE  5    0.35%   42.87%    0.67%   36.23%     1.63%    18.25%
#+end_example

\clearpage

- Method 3
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res3stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("dec1.eff","dec1.fut","dec2.eff","dec2.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar dec1.eff dec1.fut dec2.eff dec2.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10   31.44%    1.68%   35.60%    2.80%    23.40%     5.08%
 2: 10000    TRUE typeI    TRUE FALSE 10    0.42%   43.69%    0.61%   36.37%     1.41%    17.50%
 3: 10000    TRUE power    TRUE FALSE  5   26.95%    1.47%   35.22%    2.96%    28.11%     5.29%
 4: 10000    TRUE typeI    TRUE FALSE  5    0.41%   43.52%    0.62%   36.31%     1.46%    17.68%
 5: 10000    TRUE power    TRUE  TRUE 10   31.44%    1.68%   35.60%    2.80%    23.40%     5.08%
 6: 10000    TRUE typeI    TRUE  TRUE 10    0.42%   43.69%    0.61%   36.37%     1.41%    17.50%
 7: 10000    TRUE power    TRUE  TRUE  5   26.95%    1.47%   35.22%    2.96%    28.11%     5.29%
 8: 10000    TRUE typeI    TRUE  TRUE  5    0.41%   43.52%    0.62%   36.31%     1.46%    17.68%
 9: 10000    TRUE power   FALSE  TRUE 10   30.84%    1.66%   36.22%    2.90%    23.34%     5.04%
10:  9931    TRUE typeI   FALSE  TRUE 10    0.41%    0.16%    0.63%    0.58%     1.42%    96.79%
11: 10000    TRUE power   FALSE  TRUE  5   26.83%    1.67%   35.85%    2.85%    27.36%     5.44%
12: 10000    TRUE typeI   FALSE  TRUE  5    0.45%    0.02%    0.67%    0.13%     1.52%    97.21%
13: 10000    TRUE power   FALSE FALSE 10   30.84%    1.66%   36.22%    2.90%    23.34%     5.04%
14:  9931    TRUE typeI   FALSE FALSE 10    0.41%    0.16%    0.63%    0.58%     1.42%    96.79%
15: 10000    TRUE power   FALSE FALSE  5   26.83%    1.67%   35.85%    2.85%    27.36%     5.44%
16: 10000    TRUE typeI   FALSE FALSE  5    0.45%    0.02%    0.67%    0.13%     1.52%    97.21%
17: 10000   FALSE power    TRUE FALSE  5   25.94%    1.64%   34.58%    2.53%    29.05%     6.26%
18: 10000   FALSE typeI    TRUE FALSE  5    0.32%   41.33%    0.62%   36.51%     1.58%    19.64%
#+end_example

Relative frequency of stopping for with a threshold below 1.96:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- res3stage[decision %in% c("efficacy","futility"),
                        .(.N, rejection = mean2pc(decision=="efficacy"), rejectionBelow196 = mean2pc((statistic<qnorm(0.975))*(decision=="efficacy"))), 
                        by = c("scenario","missing","method","binding","fixC","ar","hypo")]
tablePrint[rejectionBelow196!=0]
#+END_SRC

#+RESULTS:
#+begin_example
    scenario missing method binding  fixC ar  hypo     N rejection rejectionBelow196
 1:        1    TRUE      1    TRUE FALSE 10 power 10000    90.96%             0.66%
 2:        1    TRUE      2    TRUE FALSE 10 power 10000    90.85%             0.62%
 3:        2    TRUE      1    TRUE FALSE 10 typeI 10000     2.46%             0.21%
 4:        2    TRUE      2    TRUE FALSE 10 typeI 10000     2.51%             0.21%
 5:        3    TRUE      1    TRUE FALSE  5 power 10000    90.62%             0.41%
 6:        3    TRUE      2    TRUE FALSE  5 power 10000    90.61%             0.42%
 7:        4    TRUE      1    TRUE FALSE  5 typeI 10000     2.52%             0.11%
 8:        4    TRUE      2    TRUE FALSE  5 typeI 10000     2.52%             0.11%
 9:       13    TRUE      1   FALSE FALSE 10 power 10000    90.60%             0.59%
10:       13    TRUE      2   FALSE FALSE 10 power 10000    90.49%             0.57%
11:       14    TRUE      1   FALSE FALSE 10 typeI  9931     2.45%             0.15%
12:       14    TRUE      2   FALSE FALSE 10 typeI  9931     2.42%             0.13%
13:       15    TRUE      1   FALSE FALSE  5 power 10000    90.31%             0.37%
14:       15    TRUE      2   FALSE FALSE  5 power 10000    90.31%             0.38%
15:       16    TRUE      1   FALSE FALSE  5 typeI 10000     2.52%             0.02%
16:       16    TRUE      2   FALSE FALSE  5 typeI 10000     2.52%             0.02%
17:       17   FALSE      1    TRUE FALSE  5 power 10000    89.85%             0.39%
18:       17   FALSE      2    TRUE FALSE  5 power 10000    89.81%             0.38%
19:       18   FALSE      1    TRUE FALSE  5 typeI 10000     2.65%             0.13%
20:       18   FALSE      2    TRUE FALSE  5 typeI 10000     2.65%             0.13%
#+end_example


\clearpage

* Bias (True effect: 0.6 under the alternative)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
true_eff <- 0.6
#+END_SRC

#+RESULTS:

** 2 stages
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, error made by each estimator
res2stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res2stage.bias <- res2stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res2stage.bias$N==1)

res2stageS.bias <- res2stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)

col.num <- c("biasMLE1","biasMLE2","biasMLE3","biasMUE1","biasMUE2","biasMUE3")
tablePrint[, c(col.num) := lapply(lapply(.SD, round, 5), format, scientific = FALSE), .SDcols = col.num]
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar biasMLE1 biasMLE2 biasMLE3 biasMUE1 biasMUE2 biasMUE3
 1: power    TRUE    TRUE FALSE 10  0.01251  0.01233  0.01275  0.00470  0.00452 -0.00450
 2: typeI    TRUE    TRUE FALSE 10 -0.01673 -0.01655 -0.01713 -0.00518 -0.00508 -0.01539
 3: power    TRUE    TRUE FALSE  5  0.02412  0.02410  0.02442  0.01141  0.01138  0.00302
 4: typeI    TRUE    TRUE FALSE  5 -0.02839 -0.02837 -0.02897 -0.01206 -0.01207 -0.02288
 5: power    TRUE    TRUE  TRUE 10  0.01251  0.01278  0.01275 -0.01829 -0.01939 -0.00450
 6: typeI    TRUE    TRUE  TRUE 10 -0.01673 -0.01725 -0.01713 -0.04244 -0.04509 -0.01539
 7: power    TRUE    TRUE  TRUE  5  0.02412  0.02444  0.02442 -0.02060 -0.02149  0.00302
 8: typeI    TRUE    TRUE  TRUE  5 -0.02839 -0.02907 -0.02897 -0.06515 -0.06704 -0.02288
 9: power    TRUE   FALSE  TRUE 10  0.01191  0.01234  0.01241 -0.00291 -0.00536  0.01012
10: typeI    TRUE   FALSE  TRUE 10 -0.00049 -0.00049 -0.00029 -0.00156 -0.00154  0.00000
11: power    TRUE   FALSE  TRUE  5  0.02382  0.02410  0.02409 -0.00384 -0.00573  0.01884
12: typeI    TRUE   FALSE  TRUE  5 -0.00004 -0.00004  0.00004 -0.00057 -0.00056 -0.00010
13: power    TRUE   FALSE FALSE 10  0.01191  0.01174  0.01241  0.01785  0.01836  0.01012
14: typeI    TRUE   FALSE FALSE 10 -0.00049 -0.00049 -0.00029 -0.00060 -0.00072  0.00000
15: power    TRUE   FALSE FALSE  5  0.02382  0.02379  0.02409  0.02577  0.02582  0.01884
16: typeI    TRUE   FALSE FALSE  5 -0.00004 -0.00004  0.00004 -0.00002 -0.00002 -0.00010
17: power   FALSE    TRUE FALSE  5  0.02542  0.02542  0.02598  0.01365  0.01366  0.00371
18: typeI   FALSE    TRUE FALSE  5 -0.02471 -0.02472 -0.02520 -0.00941 -0.00941 -0.02205
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0218    0.0218    0.0198  -0.00560  -0.00550  -0.01340
 2: typeI    TRUE    TRUE FALSE 10   -0.0272   -0.0265   -0.0296  -0.00520  -0.00606  -0.02692
 3: power    TRUE    TRUE FALSE  5    0.0472    0.0472    0.0471  -0.00425  -0.00425  -0.00760
 4: typeI    TRUE    TRUE FALSE  5   -0.0446   -0.0444   -0.0478  -0.00700  -0.00746  -0.02836
 5: power    TRUE    TRUE  TRUE 10    0.0218    0.0216    0.0198  -0.02751  -0.02951  -0.01340
 6: typeI    TRUE    TRUE  TRUE 10   -0.0272   -0.0292   -0.0296  -0.08467  -0.08715  -0.02692
 7: power    TRUE    TRUE  TRUE  5    0.0472    0.0471    0.0471  -0.02956  -0.03136  -0.00760
 8: typeI    TRUE    TRUE  TRUE  5   -0.0446   -0.0472   -0.0478  -0.10726  -0.10396  -0.02836
 9: power    TRUE   FALSE  TRUE 10    0.0256    0.0257    0.0261  -0.00808  -0.01103   0.00434
10: typeI    TRUE   FALSE  TRUE 10   -0.0040   -0.0040   -0.0040  -0.00516  -0.00516  -0.00301
11: power    TRUE   FALSE  TRUE  5    0.0499    0.0495    0.0503  -0.01402  -0.01674   0.00559
12: typeI    TRUE   FALSE  TRUE  5   -0.0040   -0.0040   -0.0040  -0.00455  -0.00455  -0.00396
13: power    TRUE   FALSE FALSE 10    0.0256    0.0256    0.0261   0.01372   0.01458   0.00434
14: typeI    TRUE   FALSE FALSE 10   -0.0040   -0.0040   -0.0040  -0.00440  -0.00450  -0.00301
15: power    TRUE   FALSE FALSE  5    0.0499    0.0499    0.0503   0.00871   0.00881   0.00559
16: typeI    TRUE   FALSE FALSE  5   -0.0040   -0.0040   -0.0040  -0.00420  -0.00420  -0.00396
17: power   FALSE    TRUE FALSE  5    0.0479    0.0479    0.0481  -0.00425  -0.00435  -0.01240
18: typeI   FALSE    TRUE FALSE  5   -0.0417   -0.0418   -0.0437  -0.00425  -0.00445  -0.02922
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

** 3 stages
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, error made by each estimator
res3stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res3stage.bias <- res3stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res3stage.bias$N==1)

res3stageS.bias <- res3stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res3stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 2)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar biasMLE1 biasMLE2 biasMLE3 biasMUE1 biasMUE2 biasMUE3
 1: power    TRUE    TRUE FALSE 10   0.0240   0.0238   0.0255   0.0161   0.0159   0.0074
 2: typeI    TRUE    TRUE FALSE 10  -0.0281  -0.0279  -0.0280  -0.0134  -0.0129  -0.0249
 3: power    TRUE    TRUE FALSE  5   0.0380   0.0380   0.0388   0.0216   0.0217   0.0130
 4: typeI    TRUE    TRUE FALSE  5  -0.0447  -0.0447  -0.0448  -0.0226  -0.0226  -0.0348
 5: power    TRUE    TRUE  TRUE 10   0.0240   0.0245   0.0255  -0.0076  -0.0083   0.0074
 6: typeI    TRUE    TRUE  TRUE 10  -0.0281  -0.0283  -0.0280  -0.0562  -0.0582  -0.0249
 7: power    TRUE    TRUE  TRUE  5   0.0380   0.0386   0.0388  -0.0105  -0.0104   0.0130
 8: typeI    TRUE    TRUE  TRUE  5  -0.0447  -0.0449  -0.0448  -0.0848  -0.0859  -0.0348
 9: power    TRUE   FALSE  TRUE 10   0.0242   0.0246   0.0253   0.0150   0.0129   0.0274
10: typeI    TRUE   FALSE  TRUE 10   0.0024   0.0023   0.0027   0.0010   0.0011   0.0031
11: power    TRUE   FALSE  TRUE  5   0.0380   0.0385   0.0388   0.0133   0.0112   0.0353
12: typeI    TRUE   FALSE  TRUE  5   0.0035   0.0035   0.0038   0.0029   0.0029   0.0038
13: power    TRUE   FALSE FALSE 10   0.0242   0.0241   0.0253   0.0348   0.0356   0.0274
14: typeI    TRUE   FALSE FALSE 10   0.0024   0.0024   0.0027   0.0021   0.0019   0.0031
15: power    TRUE   FALSE FALSE  5   0.0380   0.0380   0.0388   0.0427   0.0428   0.0353
16: typeI    TRUE   FALSE FALSE  5   0.0035   0.0035   0.0038   0.0032   0.0033   0.0038
17: power   FALSE    TRUE FALSE  5   0.0373   0.0372   0.0379   0.0221   0.0220   0.0122
18: typeI   FALSE    TRUE FALSE  5  -0.0420  -0.0419  -0.0423  -0.0203  -0.0202  -0.0344
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res3stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 2)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0348    0.0346    0.0360   0.00130   0.00120   -0.0128
 2: typeI    TRUE    TRUE FALSE 10   -0.0428   -0.0423   -0.0426   0.00205   0.00200   -0.0161
 3: power    TRUE    TRUE FALSE  5    0.0577    0.0576    0.0573  -0.00085  -0.00085   -0.0185
 4: typeI    TRUE    TRUE FALSE  5   -0.0589   -0.0588   -0.0589  -0.00455  -0.00415   -0.0195
 5: power    TRUE    TRUE  TRUE 10    0.0348    0.0350    0.0360  -0.03457  -0.03658   -0.0128
 6: typeI    TRUE    TRUE  TRUE 10   -0.0428   -0.0426   -0.0426  -0.02798  -0.03293   -0.0161
 7: power    TRUE    TRUE  TRUE  5    0.0577    0.0578    0.0573  -0.05581  -0.05901   -0.0185
 8: typeI    TRUE    TRUE  TRUE  5   -0.0589   -0.0589   -0.0589  -0.04987  -0.05342   -0.0192
 9: power    TRUE   FALSE  TRUE 10    0.0413    0.0408    0.0420  -0.00557  -0.01015    0.0046
10: typeI    TRUE   FALSE  TRUE 10    0.0012    0.0012    0.0012  -0.00101  -0.00066    0.0026
11: power    TRUE   FALSE  TRUE  5    0.0633    0.0633    0.0629  -0.03128  -0.03685    0.0062
12: typeI    TRUE   FALSE  TRUE  5    0.0015    0.0015    0.0015   0.00075   0.00070    0.0023
13: power    TRUE   FALSE FALSE 10    0.0413    0.0415    0.0420   0.02261   0.02398    0.0046
14: typeI    TRUE   FALSE FALSE 10    0.0012    0.0012    0.0012  -0.00025  -0.00010    0.0026
15: power    TRUE   FALSE FALSE  5    0.0633    0.0630    0.0629   0.02410   0.02421    0.0063
16: typeI    TRUE   FALSE FALSE  5    0.0015    0.0015    0.0015   0.00085   0.00075    0.0022
17: power   FALSE    TRUE FALSE  5    0.0584    0.0586    0.0585   0.00285   0.00275   -0.0157
18: typeI   FALSE    TRUE FALSE  5   -0.0589   -0.0584   -0.0587   0.00190   0.00230   -0.0117
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

* Distribution of the estimates

** 2 stages
Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt2stage.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg2stage.E <- ggplot(dt2stage.estimate) + facet_grid(scenario~method.char)
gg2stage.E <- gg2stage.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg2stage.E <- gg2stage.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg2stage.E <- gg2stage.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg2stage.E <- gg2stage.E + geom_vline(aes(xintercept = truth), color = "purple")
gg2stage.E <- gg2stage.E + theme(text = element_text(size=15), 
                                 axis.line = element_line(linewidth = 1.25),
                                 axis.ticks = element_line(linewidth = 2),
                                 axis.ticks.length=unit(.25, "cm"),
                                 legend.key.size = unit(3,"line"))

ggsave(gg2stage.E, filename = file.path("report","figures","gg2stage-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg2stage.E %+% dt2stage.estimate[scenario == 1] + theme(legend.position = "bottom"),
       filename = file.path("report","figures","gg2stage-estimate-density-scenario1.pdf"), width = 10)
#+END_SRC

#+RESULTS:
: Advarselsbesked:
: [1m[22mRemoved 4278 rows containing non-finite values (`stat_density()`). 
: + [1m[22mSaving 10 x 6.38 in image
: Advarselsbesked:
: [1m[22mRemoved 6 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg2stage-estimate-density.pdf]]

#+ATTR_LaTeX: :width \textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg2stage-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg2stage.estimateC <- ggplot(dt2stage.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg2stage.estimateC <- gg2stage.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg2stage.estimateC <- gg2stage.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg2stage.estimateC <- gg2stage.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg2stage.estimateC, filename = file.path("report","figures","gg2stage-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbesked:
: [1m[22mRemoved 4278 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg2stage-estimateC-density.pdf]]

\clearpage

** 3 stages

Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt3stage.estimate <- res3stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg3stage.E <- ggplot(dt3stage.estimate) + facet_grid(scenario~method.char)
gg3stage.E <- gg3stage.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg3stage.E <- gg3stage.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg3stage.E <- gg3stage.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg3stage.E <- gg3stage.E + geom_vline(aes(xintercept = truth), color = "purple")
gg3stage.E <- gg3stage.E + theme(text = element_text(size=15), 
                                 axis.line = element_line(linewidth = 1.25),
                                 axis.ticks = element_line(linewidth = 2),
                                 axis.ticks.length=unit(.25, "cm"),
                                 legend.key.size = unit(3,"line"))

ggsave(gg3stage.E, filename = file.path("report","figures","gg3stage-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg3stage.E %+% dt3stage.estimate[scenario == 1] + theme(legend.position = "bottom"),
       filename = file.path("report","figures","gg3stage-estimate-density-scenario1.pdf"), width = 10)
#+END_SRC

#+RESULTS:
: Advarselsbesked:
: [1m[22mRemoved 5834 rows containing non-finite values (`stat_density()`).
: [1m[22mSaving 10 x 6.38 in image
: Advarselsbesked:
: [1m[22mRemoved 17 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg3stage-estimate-density.pdf]]

#+ATTR_LaTeX: :width \textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg3stage-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg3stage.estimateC <- ggplot(dt3stage.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg3stage.estimateC <- gg3stage.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg3stage.estimateC <- gg3stage.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg3stage.estimateC <- gg3stage.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg3stage.estimateC, filename = file.path("report","figures","gg3stage-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbesked:
: [1m[22mRemoved 5834 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg3stage-estimateC-density.pdf]]

\clearpage

* Special cases

** 2 stages

Reason for stopping (efficacy, futility, Imax reached), continuing the
trial (decreasing information, no boundary crossed), or concluding
(stop for futility at interim):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 1:8,reason],
       method = res2stage[scenario %in% 1:8,method],
       scenario = res2stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario    1    2    3    4    5    6    7    8
reason                       method                                                 
efficacy                     1               5093   86 4874   80 5093   86 4874   80
                             2               5093   86 4874   81 5068   86 4861   77
                             3               5553  128 5028   91 5553  128 5028   91
futility                     1                320 7179  299 6950  320 7179  299 6950
                             2                349 7269  301 6960  274 6993  280 6803
                             3                242 6805  277 6776  242 6805  277 6776
no boundary crossed          1               4587 2735 4827 2970 4587 2735 4827 2970
                             2               4558 2645 4825 2959 4658 2921 4859 3120
                             3               4205 3067 4695 3133 4205 3067 4695 3133
stop for futility at interim 1                  0    0    0    0    0    0    0    0
                             2                  0    0    0    0    0    0    0    0
                             3                 10    3    0    0   10    3    0    0
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 9:18,reason],
       method = res2stage[scenario %in% 9:18,method],
       scenario = res2stage[scenario %in% 9:18,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario    9   10   11   12   13   14   15   16   17   18
reason                       method                                                           
efficacy                     1               5039   68 4821   64 5039   68 4821   64 4700   82
                             2               5028   67 4806   64 5039   68 4821   64 4700   82
                             3               5460   97 4959   72 5460   97 4959   72 4845   90
futility                     1                338 7164  309 6964  338 7164  309 6964  250 6719
                             2                301 6978  283 6833  359 7258  312 6973  250 6728
                             3                266 6800  279 6816  266 6800  279 6816  223 6532
no boundary crossed          1               4523 2768 4770 2972 4523 2768 4770 2972 5050 3099
                             2               4571 2955 4811 3103 4502 2674 4767 2963 5050 3090
                             3               4174 3103 4662 3112 4174 3103 4662 3112 4932 3278
stop for futility at interim 1                  0    0    0    0    0    0    0    0    0    0
                             2                  0    0    0    0    0    0    0    0    0    0
                             3                 15    0    0    0   15    0    0    0    1    0
#+end_example

\clearpage

** 3 stages

Reason for stopping (efficacy, futility, Imax reached), continuing the
trial (decreasing information, no boundary crossed), or concluding
(stop for futility at interim):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res3stage[scenario %in% 1:8,reason],
       method = res3stage[scenario %in% 1:8,method],
       scenario = res3stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario     1     2     3     4     5     6     7     8
reason                       method                                                         
efficacy                     1                6306   115  6116   113  6306   115  6116   113
                             2                6305   115  6123   113  6275   114  6095   111
                             3                6785   155  6270   120  6785   155  6270   120
futility                     1                 444  8228   432  8078   444  8228   432  8078
                             2                 469  8306   434  8091   412  8102   393  7982
                             3                 357  7943   390  7966   357  7943   390  7966
Imax reached                 1                  14    10     0     0    14    10     0     0
                             2                  16    10     0     0     7     9     0     0
                             3                  10    11     0     0    10    11     0     0
no boundary crossed          1               10219  6864 10663  7277 10219  6864 10663  7277
                             2               10181  6743 10652  7260 10337  7246 10753  7513
                             3                9536  7480 10498  7521  9536  7480 10498  7521
stop for futility at interim 1                   0     0     0     0     0     0     0     0
                             2                   0     0     0     0     0     0     0     0
                             3                  24     2     3     0    24     2     3     0
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res3stage[scenario %in% 9:18,reason],
       method = res3stage[scenario %in% 9:18,method],
       scenario = res3stage[scenario %in% 9:18,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario     9    10    11    12    13    14    15    16    17    18
reason                       method                                                                     
efficacy                     1                6334   116  6177   109  6334   116  6177   109  5961   101
                             2                6322   113  6160   107  6337   116  6182   110  5963   101
                             3                6782   156  6325   127  6782   156  6325   127  6105   110
futility                     1                 465 12836   438 12525   465 12836   438 12525   397  7896
                             2                 427 12493   398 12326   496 12946   442 12540   403  7911
                             3                 368 12227   395 12319   368 12227   395 12319   364  7768
Imax reached                 1                  14    22     0     0    14    22     0     0     0     0
                             2                  12    17     0     0    16    25     0     0     0     0
                             3                  12    22     0     0    12    22     0     0     0     0
no boundary crossed          1               10180  6839 10608  7323 10180  6839 10608  7323 10956  7684
                             2               10274  7192 10701  7526 10137  6726 10599  7307 10942  7666
                             3                9588  7400 10430  7507  9588  7400 10430  7507 10773  7957
stop for futility at interim 1                   0     0     0     0     0     0     0     0     0     0
                             2                   0     0     0     0     0     0     0     0     0     0
                             3                  27     0     1     0    27     0     1     0     0     0
#+end_example

\clearpage

* Reversal probability

** 2 stages


Percentage of time we observe a reversal:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
## check same stage to handle cases where stopping for futility is skipped, trials is continued until final where efficacy may be concluded but that's not a reversal
res2stageS.reversal <- res2stage.conclusion[, .(N = .N,
                                                fu2eff = mean2pc(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "futility" & conclusion == "efficacy"),
                                                eff2fu = mean2pc(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "efficacy" & conclusion == "futility")),
                                            by = c("method","scenario","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res2stageS.reversal, scenario + N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint[order(tablePrint$scenario),.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power    TRUE 10    TRUE FALSE    0.43%    0.50%        0    0.13%    0.14%    0.77%
 2: 10000 typeI    TRUE 10    TRUE FALSE    0.13%    0.13%        0    0.13%    0.13%    0.40%
 3: 10000 power    TRUE  5    TRUE FALSE    0.05%    0.05%        0    0.05%    0.05%    0.55%
 4: 10000 typeI    TRUE  5    TRUE FALSE    0.03%    0.03%        0    0.02%    0.02%    0.11%
 5: 10000 power    TRUE 10    TRUE  TRUE    0.24%    0.19%        0    0.37%    0.37%    0.77%
 6: 10000 typeI    TRUE 10    TRUE  TRUE    0.04%    0.04%        0    0.24%    0.24%    0.40%
 7: 10000 power    TRUE  5    TRUE  TRUE        0        0        0    0.40%    0.39%    0.55%
 8: 10000 typeI    TRUE  5    TRUE  TRUE        0        0        0    0.09%    0.08%    0.11%
 9:  9900 power    TRUE 10   FALSE  TRUE    0.21%    0.17%        0    0.49%    0.49%    0.76%
10: 10000 typeI    TRUE 10   FALSE  TRUE        0        0        0    0.23%    0.23%    0.36%
11:  9900 power    TRUE  5   FALSE  TRUE        0        0        0    0.35%    0.32%    0.47%
12: 10000 typeI    TRUE  5   FALSE  TRUE        0        0        0    0.09%    0.09%    0.13%
13:  9900 power    TRUE 10   FALSE FALSE    0.40%    0.46%        0    0.15%    0.16%    0.76%
14: 10000 typeI    TRUE 10   FALSE FALSE        0        0        0    0.08%    0.10%    0.36%
15:  9900 power    TRUE  5   FALSE FALSE    0.04%    0.05%        0    0.04%    0.04%    0.47%
16: 10000 typeI    TRUE  5   FALSE FALSE        0        0        0    0.02%    0.02%    0.13%
17: 10000 power   FALSE  5    TRUE FALSE    0.08%    0.08%        0    0.04%    0.04%    0.52%
18:  9900 typeI   FALSE  5    TRUE FALSE    0.02%    0.02%        0    0.03%    0.03%    0.14%
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
dt.tempo <- res2stage.conclusion[, .(N = .N,
                                     fu2eff = mean(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "futility" & conclusion == "efficacy"),
                                     eff2fu = mean(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "efficacy" & conclusion == "futility")),
                                 by = c("method","scenario","missing","binding","fixC","ar","hypo")]
table.tempo <- dcast(dt.tempo, scenario + N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
table.tempo[,100*range(eff2fu_3-eff2fu_2)]
#+END_SRC

#+RESULTS:
: [1] 0.03 0.63


\clearpage

** 3 stages

Percentage of time we observe a reversal:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
## check same stage to handle cases where stopping for futility is skipped, trials is continued until final where efficacy may be concluded but that's not a reversal
res3stageS.reversal <- res3stage.conclusion[, .(N = .N,
                                                fu2eff = mean2pc(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "futility" & conclusion == "efficacy"),
                                                eff2fu = mean2pc(stage.interim == stage.conclusion & decision.interim == "stop" & reason.interim == "efficacy" & conclusion == "futility")),
                                            by = c("method","scenario","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res3stageS.reversal, N + scenario + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint[order(tablePrint$scenario),.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC


#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power    TRUE 10    TRUE FALSE    0.57%    0.66%        0    0.15%    0.19%    0.91%
 2: 10000 typeI    TRUE 10    TRUE FALSE    0.16%    0.18%        0    0.22%    0.22%    0.52%
 3: 10000 power    TRUE  5    TRUE FALSE    0.15%    0.16%        0    0.06%    0.06%    0.53%
 4: 10000 typeI    TRUE  5    TRUE FALSE    0.02%    0.02%        0    0.02%    0.02%    0.17%
 5: 10000 power    TRUE 10    TRUE  TRUE    0.37%    0.36%        0    0.61%    0.60%    0.91%
 6: 10000 typeI    TRUE 10    TRUE  TRUE    0.06%    0.04%        0    0.33%    0.32%    0.52%
 7: 10000 power    TRUE  5    TRUE  TRUE    0.05%    0.03%        0    0.37%    0.35%    0.53%
 8: 10000 typeI    TRUE  5    TRUE  TRUE    0.01%        0        0    0.12%    0.11%    0.17%
 9: 10000 power    TRUE 10   FALSE  TRUE    0.41%    0.39%        0    0.58%    0.56%    0.88%
10:  9931 typeI    TRUE 10   FALSE  TRUE        0        0        0    0.33%    0.30%    0.53%
11: 10000 power    TRUE  5   FALSE  TRUE    0.02%    0.01%        0    0.36%    0.35%    0.57%
12: 10000 typeI    TRUE  5   FALSE  TRUE        0        0        0    0.09%    0.08%    0.15%
13: 10000 power    TRUE 10   FALSE FALSE    0.66%    0.74%        0    0.24%    0.26%    0.88%
14:  9931 typeI    TRUE 10   FALSE FALSE        0        0        0    0.18%    0.21%    0.53%
15: 10000 power    TRUE  5   FALSE FALSE    0.10%    0.12%        0    0.07%    0.07%    0.57%
16: 10000 typeI    TRUE  5   FALSE FALSE        0        0        0    0.07%    0.07%    0.15%
17: 10000 power   FALSE  5    TRUE FALSE    0.11%    0.10%        0    0.07%    0.07%    0.53%
18: 10000 typeI   FALSE  5    TRUE FALSE    0.04%    0.04%        0    0.03%    0.03%    0.16%
#+end_example


\clearpage

* Logical consistency of p-values/CIs

** Mismatch p-value / boundaries
*** 2 stages

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.PmismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = mean2pc(p.value_MUE<0.025)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.PmismatchFU <- dcast(res2stage.PmismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.PmismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.PmismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.PmismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = mean2pc(p.value_MUE>0.025)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.PmismatchEFF <- dcast(res2stage.PmismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.PmismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.PmismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

\clearpage

*** 3 stages

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.PmismatchFU <- res3stage[decision=="futility",.(N = .N, mismatch = mean2pc(p.value_MUE<0.025)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res3stageW.PmismatchFU <- dcast(res3stage.PmismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res3stageW.PmismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res3stageW.PmismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0    0.10%
 4: typeI    TRUE  5    TRUE FALSE        0    0.01%        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0    0.10%
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE    0.10%        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE    0.10%        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

Largest mismatch:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
print(res3stage[decision=="futility" & p.value_MUE<0.025,min(p.value_MUE)], digits = 10)
#+END_SRC

#+RESULTS:
: [1] 0.02499104799


When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.PmismatchEFF <- res3stage[decision=="efficacy",.(N = .N, mismatch = mean2pc(p.value_MUE>0.025)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res3stageW.PmismatchEFF <- dcast(res3stage.PmismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res3stageW.PmismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res3stageW.PmismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE    0.01%        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE    0.01%        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0    0.01%
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

Largest mismatch:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
print(res3stage[decision=="efficacy" & p.value_MUE>0.025,max(p.value_MUE)], digits = 10)
#+END_SRC

#+RESULTS:
: [1] 0.02500693409

\clearpage

** Mismatch confidence intervals / boundaries

*** 2 stages 

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.CImismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = mean2pc(lower_MUE>0)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.CImismatchFU <- dcast(res2stage.CImismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.CImismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.CImismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC       method 1       method 2       method 3
 1: power    TRUE 10    TRUE FALSE              0              0              0
 2: typeI    TRUE 10    TRUE FALSE              0              0              0
 3: power    TRUE  5    TRUE FALSE              0              0              0
 4: typeI    TRUE  5    TRUE FALSE              0              0              0
 5: power    TRUE 10    TRUE  TRUE              0              0              0
 6: typeI    TRUE 10    TRUE  TRUE              0              0              0
 7: power    TRUE  5    TRUE  TRUE              0              0              0
 8: typeI    TRUE  5    TRUE  TRUE              0              0              0
 9: power    TRUE 10   FALSE  TRUE 0 (NA: 37.73%) 0 (NA: 34.80%) 0 (NA: 35.93%)
10: typeI    TRUE 10   FALSE  TRUE  0 (NA: 0.24%)  0 (NA: 0.24%)  0 (NA: 0.37%)
11: power    TRUE  5   FALSE  TRUE 0 (NA: 35.87%) 0 (NA: 33.40%) 0 (NA: 34.53%)
12: typeI    TRUE  5   FALSE  TRUE  0 (NA: 0.09%)  0 (NA: 0.09%)  0 (NA: 0.13%)
13: power    TRUE 10   FALSE FALSE 0 (NA: 34.13%) 0 (NA: 35.61%) 0 (NA: 35.93%)
14: typeI    TRUE 10   FALSE FALSE  0 (NA: 0.08%)  0 (NA: 0.10%)  0 (NA: 0.37%)
15: power    TRUE  5   FALSE FALSE 0 (NA: 33.44%) 0 (NA: 33.62%) 0 (NA: 34.53%)
16: typeI    TRUE  5   FALSE FALSE  0 (NA: 0.02%)  0 (NA: 0.02%)  0 (NA: 0.13%)
17: power   FALSE  5    TRUE FALSE              0              0              0
18: typeI   FALSE  5    TRUE FALSE              0              0              0
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage[binding==FALSE & decision %in% c("futility","efficacy"),.(CINA.pc=100*mean(is.na(lower_MUE)),min.p=min(p.value_MUE),median.p=median(p.value_MUE)),by=c("decision","stage")]
#+END_SRC

#+RESULTS:
:    decision stage CINA.pc     min.p  median.p
: 1: efficacy     2       0 4.112e-03 0.0084281
: 2: efficacy     1       0 2.024e-11 0.0004663
: 3: futility     2       0 2.500e-02 0.4854286
: 4: futility     1     100 9.906e-01 1.0000000

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.CImismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = mean2pc(lower_MUE<0)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.CImismatchEFF <- dcast(res2stage.CImismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.CImismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.CImismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

*** 3 stages 

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.CImismatchFU <- res3stage[decision=="futility",.(N = .N, mismatch = mean2pc(lower_MUE>0)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res3stageW.CImismatchFU <- dcast(res3stage.CImismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res3stageW.CImismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res3stageW.CImismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC       method 1       method 2       method 3
 1: power    TRUE 10    TRUE FALSE              0              0              0
 2: typeI    TRUE 10    TRUE FALSE              0              0              0
 3: power    TRUE  5    TRUE FALSE              0              0              0
 4: typeI    TRUE  5    TRUE FALSE              0              0              0
 5: power    TRUE 10    TRUE  TRUE              0              0              0
 6: typeI    TRUE 10    TRUE  TRUE              0              0              0
 7: power    TRUE  5    TRUE  TRUE              0              0              0
 8: typeI    TRUE  5    TRUE  TRUE              0              0              0
 9: power    TRUE 10   FALSE  TRUE 0 (NA: 48.25%) 0 (NA: 45.63%) 0 (NA: 47.50%)
10: typeI    TRUE 10   FALSE  TRUE  0 (NA: 0.34%)  0 (NA: 0.31%)  0 (NA: 0.55%)
11: power    TRUE  5   FALSE  TRUE 0 (NA: 46.92%) 0 (NA: 43.72%) 0 (NA: 45.38%)
12: typeI    TRUE  5   FALSE  TRUE  0 (NA: 0.09%)  0 (NA: 0.08%)  0 (NA: 0.15%)
13: power    TRUE 10   FALSE FALSE 0 (NA: 45.00%) 0 (NA: 47.11%) 0 (NA: 47.50%)
14: typeI    TRUE 10   FALSE FALSE  0 (NA: 0.19%)  0 (NA: 0.22%)  0 (NA: 0.55%)
15: power    TRUE  5   FALSE FALSE 0 (NA: 44.89%) 0 (NA: 45.10%) 0 (NA: 45.38%)
16: typeI    TRUE  5   FALSE FALSE  0 (NA: 0.07%)  0 (NA: 0.07%)  0 (NA: 0.15%)
17: power   FALSE  5    TRUE FALSE              0              0              0
18: typeI   FALSE  5    TRUE FALSE              0              0              0
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res3stage[binding==FALSE & decision %in% c("futility","efficacy"),.(CINA.pc=100*mean(is.na(lower_MUE)),min.p=min(p.value_MUE),median.p=median(p.value_MUE)),by=c("decision","stage")]
#+END_SRC

#+RESULTS:
:    decision stage CINA.pc     min.p  median.p
: 1: efficacy     3    0.00 6.662e-03 0.0115725
: 2: futility     2   96.62 3.184e-02 1.0000000
: 3: futility     3    0.00 2.500e-02 0.4881406
: 4: efficacy     1    0.00 1.718e-10 0.0003669
: 5: futility     1  100.00 9.972e-01 1.0000000
: 6: efficacy     2    0.00 2.098e-03 0.0042770

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.CImismatchEFF <- res3stage[decision=="efficacy",.(N = .N, mismatch = mean2pc(lower_MUE<0)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res3stageW.CImismatchEFF <- dcast(res3stage.CImismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res3stageW.CImismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res3stageW.CImismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0    0.01%
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
print(res3stage[decision=="efficacy" & lower_MUE<0,min(lower_MUE)], digits = 10)
#+END_SRC

#+RESULTS:
: [1] -1.665334537e-16




** Range of p-values

*** 2 stages
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2.stage.rangep <- res2stage[,.(range.p_MUE = paste0("[",paste(round(range(p.value_MUE, na.rm = TRUE),4), collapse = ";"),"]")),
                               by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2W.stage.rangep <- dcast(res2.stage.rangep, scenario+missing+binding+fixC+ar+hypo~method.char, value.var = "range.p_MUE")
res2W.stage.rangep[order(scenario),.SD,.SDcols = setdiff(names(res2W.stage.rangep),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
    missing binding  fixC ar  hypo   method 1   method 2   method 3
 1:    TRUE    TRUE FALSE 10 power [0;0.9163] [0;0.9163] [0;0.9163]
 2:    TRUE    TRUE FALSE 10 typeI      [0;1]      [0;1]      [0;1]
 3:    TRUE    TRUE FALSE  5 power [0;0.9194] [0;0.9194] [0;0.9202]
 4:    TRUE    TRUE FALSE  5 typeI      [0;1]      [0;1]      [0;1]
 5:    TRUE    TRUE  TRUE 10 power [0;0.9534] [0;0.9557] [0;0.9163]
 6:    TRUE    TRUE  TRUE 10 typeI      [0;1]      [0;1]      [0;1]
 7:    TRUE    TRUE  TRUE  5 power [0;0.9606] [0;0.9624] [0;0.9202]
 8:    TRUE    TRUE  TRUE  5 typeI  [1e-04;1]  [1e-04;1]      [0;1]
 9:    TRUE   FALSE  TRUE 10 power      [0;1]      [0;1]      [0;1]
10:    TRUE   FALSE  TRUE 10 typeI  [3e-04;1]  [4e-04;1]  [2e-04;1]
11:    TRUE   FALSE  TRUE  5 power      [0;1]      [0;1]      [0;1]
12:    TRUE   FALSE  TRUE  5 typeI  [3e-04;1]  [3e-04;1]  [1e-04;1]
13:    TRUE   FALSE FALSE 10 power      [0;1]      [0;1]      [0;1]
14:    TRUE   FALSE FALSE 10 typeI  [1e-04;1]  [1e-04;1]  [2e-04;1]
15:    TRUE   FALSE FALSE  5 power      [0;1]      [0;1]      [0;1]
16:    TRUE   FALSE FALSE  5 typeI  [1e-04;1]  [1e-04;1]  [1e-04;1]
17:   FALSE    TRUE FALSE  5 power  [0;0.867]  [0;0.867]  [0;0.882]
18:   FALSE    TRUE FALSE  5 typeI [0;0.9999] [0;0.9999]      [0;1]
#+end_example

\clearpage

*** 3 stages
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3.stage.rangep <- res3stage[,.(range.p_MUE = paste0("[",paste(round(range(p.value_MUE, na.rm = TRUE),4), collapse = ";"),"]")),
                               by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res3W.stage.rangep <- dcast(res3.stage.rangep, scenario+missing+binding+fixC+ar+hypo~method.char, value.var = "range.p_MUE")
res3W.stage.rangep[order(scenario),.SD,.SDcols = setdiff(names(res3W.stage.rangep),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
    missing binding  fixC ar  hypo       method 1       method 2   method 3
 1:    TRUE    TRUE FALSE 10 power     [0;0.8665]     [0;0.8663] [0;0.9035]
 2:    TRUE    TRUE FALSE 10 typeI [1e-04;0.9999] [1e-04;0.9999]  [2e-04;1]
 3:    TRUE    TRUE FALSE  5 power     [0;0.8959]     [0;0.8959] [0;0.9405]
 4:    TRUE    TRUE FALSE  5 typeI     [0;0.9998]     [0;0.9998] [0;0.9999]
 5:    TRUE    TRUE  TRUE 10 power      [0;0.935]     [0;0.9394] [0;0.9035]
 6:    TRUE    TRUE  TRUE 10 typeI      [3e-04;1]      [3e-04;1]  [2e-04;1]
 7:    TRUE    TRUE  TRUE  5 power      [0;0.965]     [0;0.9659] [0;0.9405]
 8:    TRUE    TRUE  TRUE  5 typeI          [0;1]      [1e-04;1] [0;0.9999]
 9:    TRUE   FALSE  TRUE 10 power          [0;1]          [0;1]      [0;1]
10:    TRUE   FALSE  TRUE 10 typeI      [4e-04;1]      [5e-04;1]  [3e-04;1]
11:    TRUE   FALSE  TRUE  5 power          [0;1]          [0;1]      [0;1]
12:    TRUE   FALSE  TRUE  5 typeI      [3e-04;1]      [4e-04;1]  [1e-04;1]
13:    TRUE   FALSE FALSE 10 power          [0;1]          [0;1]      [0;1]
14:    TRUE   FALSE FALSE 10 typeI      [1e-04;1]      [1e-04;1]  [3e-04;1]
15:    TRUE   FALSE FALSE  5 power          [0;1]          [0;1]      [0;1]
16:    TRUE   FALSE FALSE  5 typeI      [1e-04;1]      [1e-04;1]  [1e-04;1]
17:   FALSE    TRUE FALSE  5 power     [0;0.8745]     [0;0.8745]  [0;0.906]
18:   FALSE    TRUE FALSE  5 typeI     [0;0.9998]     [0;0.9998] [0;0.9999]
#+end_example

\clearpage 

* Coverage
** 2 stages
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.coverage <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = mean2pc( (lower_MUE <= truth) & (truth <= upper_MUE))),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.coverage, hypo + missing + ar + binding + fixC ~ method.char, value.var = "coverage")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC           method 1           method 2           method 3
 1: power   FALSE  5    TRUE FALSE             95.32%             95.35%             95.50%
 2: power    TRUE  5   FALSE FALSE 96.06% (NA: 3.12%) 96.06% (NA: 3.14%) 96.26% (NA: 2.86%)
 3: power    TRUE  5   FALSE  TRUE 97.57% (NA: 3.47%) 97.56% (NA: 3.18%) 96.26% (NA: 2.86%)
 4: power    TRUE  5    TRUE FALSE             94.68%             94.69%             94.86%
 5: power    TRUE  5    TRUE  TRUE             95.98%             95.90%             94.86%
 6: power    TRUE 10   FALSE FALSE 96.16% (NA: 3.16%) 96.22% (NA: 3.32%) 95.96% (NA: 2.52%)
 7: power    TRUE 10   FALSE  TRUE 97.11% (NA: 3.70%) 97.07% (NA: 3.36%) 95.96% (NA: 2.52%)
 8: power    TRUE 10    TRUE FALSE             94.76%             94.75%             95.04%
 9: power    TRUE 10    TRUE  TRUE             95.55%             95.67%             95.04%
10: typeI   FALSE  5    TRUE FALSE             94.96%             94.96%             94.30%
11: typeI    TRUE  5   FALSE FALSE 95.02% (NA: 0.02%) 95.02% (NA: 0.02%) 95.11% (NA: 0.12%)
12: typeI    TRUE  5   FALSE  TRUE 95.09% (NA: 0.09%) 95.08% (NA: 0.09%) 95.11% (NA: 0.12%)
13: typeI    TRUE  5    TRUE FALSE             94.63%             94.63%             94.19%
14: typeI    TRUE  5    TRUE  TRUE             91.68%             91.52%             94.19%
15: typeI    TRUE 10   FALSE FALSE 95.09% (NA: 0.08%) 95.11% (NA: 0.10%) 95.29% (NA: 0.35%)
16: typeI    TRUE 10   FALSE  TRUE 95.23% (NA: 0.23%) 95.22% (NA: 0.23%) 95.29% (NA: 0.35%)
17: typeI    TRUE 10    TRUE FALSE             94.56%             94.57%             94.17%
18: typeI    TRUE 10    TRUE  TRUE             92.67%             92.39%             94.17%
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.coverage <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = 100*mean( (lower_MUE <= truth) & (truth <= upper_MUE), na.rm = TRUE)),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
range(res2stage.coverage$coverage)

#+END_SRC

#+RESULTS:
: [1] 91.52 97.57

Average width of the confidence intervals
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.width <- res2stage[decision %in% c("futility","efficacy"),
                             .(N = .N,
                               width.naive = mean(upper_ML-lower_ML, na.rm = TRUE),
                               width.MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE)),
                             by = c("method.char","missing","binding","fixC","ar","hypo")]
res2stage.width[, width.ratio := width.MUE/width.naive]
dcast(res2stage.width, hypo + missing + ar + binding + fixC ~ method.char, value.var = "width.ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE   1.0532   1.0533    1.053
 2: power    TRUE  5   FALSE FALSE   1.0453   1.0453    1.045
 3: power    TRUE  5   FALSE  TRUE   1.0520   1.0526    1.045
 4: power    TRUE  5    TRUE FALSE   1.0520   1.0520    1.051
 5: power    TRUE  5    TRUE  TRUE   1.0586   1.0587    1.051
 6: power    TRUE 10   FALSE FALSE   1.0559   1.0558    1.051
 7: power    TRUE 10   FALSE  TRUE   1.0638   1.0649    1.051
 8: power    TRUE 10    TRUE FALSE   1.0627   1.0631    1.058
 9: power    TRUE 10    TRUE  TRUE   1.0708   1.0712    1.058
10: typeI   FALSE  5    TRUE FALSE   1.0444   1.0443    1.047
11: typeI    TRUE  5   FALSE FALSE   0.9995   0.9995    1.014
12: typeI    TRUE  5   FALSE  TRUE   0.9994   0.9996    1.014
13: typeI    TRUE  5    TRUE FALSE   1.0431   1.0429    1.047
14: typeI    TRUE  5    TRUE  TRUE   1.0396   1.0406    1.047
15: typeI    TRUE 10   FALSE FALSE   1.0009   1.0009    1.044
16: typeI    TRUE 10   FALSE  TRUE   1.0005   1.0005    1.044
17: typeI    TRUE 10    TRUE FALSE   1.0469   1.0457    1.057
18: typeI    TRUE 10    TRUE  TRUE   1.0412   1.0425    1.057
#+end_example

Average ratio between the length of the MUE CIs vs. the ML CIs
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.length <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  length_MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE),
                                  length_ML = mean(upper_ML-lower_ML, na.rm = TRUE),
                                  length_ratio = mean((upper_MUE-lower_MUE)/(upper_ML-lower_ML), na.rm = TRUE)),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.length, hypo + missing + ar + binding + fixC ~ method.char, value.var = "length_ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE   1.0579   1.0580    1.058
 2: power    TRUE  5   FALSE FALSE   1.0539   1.0539    1.053
 3: power    TRUE  5   FALSE  TRUE   1.0602   1.0604    1.053
 4: power    TRUE  5    TRUE FALSE   1.0574   1.0574    1.057
 5: power    TRUE  5    TRUE  TRUE   1.0633   1.0632    1.057
 6: power    TRUE 10   FALSE FALSE   1.0603   1.0603    1.056
 7: power    TRUE 10   FALSE  TRUE   1.0680   1.0688    1.056
 8: power    TRUE 10    TRUE FALSE   1.0652   1.0656    1.060
 9: power    TRUE 10    TRUE  TRUE   1.0727   1.0730    1.060
10: typeI   FALSE  5    TRUE FALSE   1.0506   1.0506    1.054
11: typeI    TRUE  5   FALSE FALSE   0.9995   0.9995    1.014
12: typeI    TRUE  5   FALSE  TRUE   0.9996   0.9997    1.014
13: typeI    TRUE  5    TRUE FALSE   1.0499   1.0497    1.054
14: typeI    TRUE  5    TRUE  TRUE   1.0467   1.0477    1.054
15: typeI    TRUE 10   FALSE FALSE   1.0009   1.0010    1.045
16: typeI    TRUE 10   FALSE  TRUE   1.0008   1.0009    1.045
17: typeI    TRUE 10    TRUE FALSE   1.0502   1.0490    1.061
18: typeI    TRUE 10    TRUE  TRUE   1.0448   1.0461    1.061
#+end_example

\clearpage

** 3 stages

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.coverage <- res3stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = mean2pc( (lower_MUE <= truth) & (truth <= upper_MUE))),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res3stage.coverage, hypo + missing + ar + binding + fixC ~ method.char, value.var = "coverage")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC           method 1           method 2           method 3
 1: power   FALSE  5    TRUE FALSE             94.74% 94.73% (NA: 0.02%) 95.00% (NA: 0.01%)
 2: power    TRUE  5   FALSE FALSE 95.81% (NA: 4.35%) 95.85% (NA: 4.37%) 95.85% (NA: 3.85%)
 3: power    TRUE  5   FALSE  TRUE 97.75% (NA: 4.72%) 97.73% (NA: 4.32%) 95.86% (NA: 3.85%)
 4: power    TRUE  5    TRUE FALSE 95.11% (NA: 0.04%) 95.14% (NA: 0.04%) 95.32% (NA: 0.03%)
 5: power    TRUE  5    TRUE  TRUE 96.03% (NA: 0.03%) 96.15% (NA: 0.03%) 95.32% (NA: 0.03%)
 6: power    TRUE 10   FALSE FALSE 95.81% (NA: 4.23%) 95.89% (NA: 4.48%) 95.54% (NA: 3.21%)
 7: power    TRUE 10   FALSE  TRUE 97.48% (NA: 4.82%) 97.50% (NA: 4.44%) 95.52% (NA: 3.21%)
 8: power    TRUE 10    TRUE FALSE             95.15%             95.16%             95.33%
 9: power    TRUE 10    TRUE  TRUE             95.97%             95.91%             95.33%
10: typeI   FALSE  5    TRUE FALSE 94.80% (NA: 0.13%) 94.80% (NA: 0.13%) 94.19% (NA: 0.15%)
11: typeI    TRUE  5   FALSE FALSE 94.78% (NA: 0.30%) 94.83% (NA: 0.35%) 94.71% (NA: 0.40%)
12: typeI    TRUE  5   FALSE  TRUE 94.80% (NA: 0.32%) 94.79% (NA: 0.30%) 94.75% (NA: 0.40%)
13: typeI    TRUE  5    TRUE FALSE 95.05% (NA: 0.12%) 95.05% (NA: 0.12%) 94.20% (NA: 0.16%)
14: typeI    TRUE  5    TRUE  TRUE 89.80% (NA: 0.13%) 89.53% (NA: 0.15%) 94.20% (NA: 0.15%)
15: typeI    TRUE 10   FALSE FALSE 94.85% (NA: 0.42%) 94.90% (NA: 0.47%) 95.13% (NA: 0.77%)
16: typeI    TRUE 10   FALSE  TRUE 95.00% (NA: 0.57%) 95.01% (NA: 0.59%) 95.12% (NA: 0.79%)
17: typeI    TRUE 10    TRUE FALSE 95.02% (NA: 0.22%) 94.97% (NA: 0.14%) 94.30% (NA: 0.09%)
18: typeI    TRUE 10    TRUE  TRUE 91.52% (NA: 0.17%) 91.12% (NA: 0.14%) 94.30% (NA: 0.11%)
#+end_example

Average width of the confidence intervals
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.width <- res3stage[decision %in% c("futility","efficacy"),
                             .(N = .N,
                               width.naive = mean(upper_ML-lower_ML, na.rm = TRUE),
                               width.MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE)),
                             by = c("method.char","missing","binding","fixC","ar","hypo")]
res3stage.width[, width.ratio := width.MUE/width.naive]
dcast(res3stage.width, hypo + missing + ar + binding + fixC ~ method.char, value.var = "width.ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE   1.0789   1.0790    1.077
 2: power    TRUE  5   FALSE FALSE   1.0707   1.0707    1.069
 3: power    TRUE  5   FALSE  TRUE   1.0757   1.0757    1.069
 4: power    TRUE  5    TRUE FALSE   1.0782   1.0783    1.077
 5: power    TRUE  5    TRUE  TRUE   1.0834   1.0830    1.077
 6: power    TRUE 10   FALSE FALSE   1.1011   1.1012    1.096
 7: power    TRUE 10   FALSE  TRUE   1.1101   1.1110    1.096
 8: power    TRUE 10    TRUE FALSE   1.1085   1.1087    1.104
 9: power    TRUE 10    TRUE  TRUE   1.1176   1.1176    1.104
10: typeI   FALSE  5    TRUE FALSE   1.0788   1.0788    1.084
11: typeI    TRUE  5   FALSE FALSE   0.9997   0.9997    1.018
12: typeI    TRUE  5   FALSE  TRUE   0.9998   0.9998    1.018
13: typeI    TRUE  5    TRUE FALSE   1.0743   1.0742    1.079
14: typeI    TRUE  5    TRUE  TRUE   1.0755   1.0764    1.079
15: typeI    TRUE 10   FALSE FALSE   0.9995   0.9995    1.061
16: typeI    TRUE 10   FALSE  TRUE   0.9990   0.9994    1.061
17: typeI    TRUE 10    TRUE FALSE   1.1013   1.1005    1.114
18: typeI    TRUE 10    TRUE  TRUE   1.0942   1.0953    1.114
#+end_example

Average ratio between the length of the MUE CIs vs. the ML CIs
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res3stage.length <- res3stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  length_MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE),
                                  length_ML = mean(upper_ML-lower_ML, na.rm = TRUE),
                                  length_ratio = mean((upper_MUE-lower_MUE)/(upper_ML-lower_ML), na.rm = TRUE)),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res3stage.length, hypo + missing + ar + binding + fixC ~ method.char, value.var = "length_ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE   1.0825   1.0826    1.081
 2: power    TRUE  5   FALSE FALSE   1.0776   1.0776    1.076
 3: power    TRUE  5   FALSE  TRUE   1.0811   1.0808    1.076
 4: power    TRUE  5    TRUE FALSE   1.0827   1.0828    1.081
 5: power    TRUE  5    TRUE  TRUE   1.0859   1.0854    1.081
 6: power    TRUE 10   FALSE FALSE   1.1040   1.1041    1.098
 7: power    TRUE 10   FALSE  TRUE   1.1117   1.1120    1.098
 8: power    TRUE 10    TRUE FALSE   1.1100   1.1103    1.105
 9: power    TRUE 10    TRUE  TRUE   1.1173   1.1171    1.105
10: typeI   FALSE  5    TRUE FALSE   1.0854   1.0854    1.091
11: typeI    TRUE  5   FALSE FALSE   0.9996   0.9996    1.018
12: typeI    TRUE  5   FALSE  TRUE   0.9998   0.9997    1.018
13: typeI    TRUE  5    TRUE FALSE   1.0815   1.0814    1.087
14: typeI    TRUE  5    TRUE  TRUE   1.0844   1.0851    1.087
15: typeI    TRUE 10   FALSE FALSE   0.9995   0.9995    1.062
16: typeI    TRUE 10   FALSE  TRUE   0.9994   0.9996    1.062
17: typeI    TRUE 10    TRUE FALSE   1.1060   1.1052    1.120
18: typeI    TRUE 10    TRUE  TRUE   1.1006   1.1013    1.120
#+end_example

\clearpage

* Percentage of missing values (2 stages)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.nXinterim <- res2stage[,.(N = .N, nX1 = unique(nX1.interim), nX2 = unique(nX2.interim), nX3 = unique(nX3.interim)),
                                 by = c("method","missing","ar","seed","binding","fixC","hypo")]
all(res2stage.nXinterim$N==3)

res2stageS.nXinterim <- res2stage.nXinterim[, .(N = .N,
                                                pc.all = 100*mean(nX3/nX1),
                                                pc.missing3 = 100*mean(nX2/nX1-nX3/nX1),
                                                pc.missing23 = 100*mean(1-nX2/nX1)),
                                            by = c("method","missing","ar","hypo","fixC","binding")]

setkeyv(res2stageS.nXinterim,"ar")
#+END_SRC

#+RESULTS:
: [1] FALSE

At the first interim
- =pc.all= percentage of observations with full data (with respect to
  all observations, i.e. patients with baseline measurement)
- =pc.missing3= percentage of observations missing the final outcome
  but with intermediate outcome value and baseline.
- =pc.missing23= percentage of observations with only baseline value

Here only for method 1 - values are very similar between different
methods:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.nXinterim[method==1]
#+END_SRC

#+RESULTS:
#+begin_example
    method missing ar  hypo  fixC binding     N pc.all pc.missing3 pc.missing23
 1:      1    TRUE  5 power FALSE    TRUE 10000  78.81       9.833       11.360
 2:      1    TRUE  5 typeI FALSE    TRUE 10000  78.81       9.833       11.360
 3:      1    TRUE  5 power  TRUE    TRUE 10000  78.81       9.833       11.360
 4:      1    TRUE  5 typeI  TRUE    TRUE 10000  78.81       9.833       11.360
 5:      1    TRUE  5 power  TRUE   FALSE  9900  78.73       9.861       11.410
 6:      1    TRUE  5 typeI  TRUE   FALSE 10000  78.73       9.860       11.410
 7:      1    TRUE  5 power FALSE   FALSE  9900  78.73       9.861       11.410
 8:      1    TRUE  5 typeI FALSE   FALSE 10000  78.73       9.860       11.410
 9:      1   FALSE  5 power FALSE    TRUE 10000  86.82       6.570        6.610
10:      1   FALSE  5 typeI FALSE    TRUE  9900  86.82       6.570        6.609
11:      1    TRUE 10 power FALSE    TRUE 10000  70.41      13.802       15.791
12:      1    TRUE 10 typeI FALSE    TRUE 10000  70.41      13.802       15.791
13:      1    TRUE 10 power  TRUE    TRUE 10000  70.41      13.802       15.791
14:      1    TRUE 10 typeI  TRUE    TRUE 10000  70.41      13.802       15.791
15:      1    TRUE 10 power  TRUE   FALSE  9900  70.42      13.807       15.776
16:      1    TRUE 10 typeI  TRUE   FALSE 10000  70.42      13.806       15.776
17:      1    TRUE 10 power FALSE   FALSE  9900  70.42      13.807       15.776
18:      1    TRUE 10 typeI FALSE   FALSE 10000  70.42      13.806       15.776
#+end_example

\clearpage

* Information

** 2 stages
Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt2stage.info <- res2stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt2stage.info[, type := factor(type, c("interim","decision","final"))]
tablePrint.2stage <- dcast(dt2stage.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type,
                    value.var = "infoPC")
print(tablePrint.2stage, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar interim decision  final
        1    TRUE    TRUE FALSE 10   54.92    77.30 103.07
        2    TRUE    TRUE FALSE 10   54.92    77.05 102.89
        3    TRUE    TRUE FALSE  5   53.43    64.89 103.08
        4    TRUE    TRUE FALSE  5   53.43    64.61 102.94
        5    TRUE    TRUE  TRUE 10   54.92    77.30 103.07
        6    TRUE    TRUE  TRUE 10   54.92    77.05 102.89
        7    TRUE    TRUE  TRUE  5   53.43    64.89 103.08
        8    TRUE    TRUE  TRUE  5   53.43    64.61 102.94
        9    TRUE   FALSE  TRUE 10   54.72    76.74 102.63
       10    TRUE   FALSE  TRUE 10   54.71    76.11 103.18
       11    TRUE   FALSE  TRUE  5   53.25    64.47 102.68
       12    TRUE   FALSE  TRUE  5   53.25    64.35 103.18
       13    TRUE   FALSE FALSE 10   54.72    76.74 102.63
       14    TRUE   FALSE FALSE 10   54.71    76.11 103.18
       15    TRUE   FALSE FALSE  5   53.25    64.47 102.68
       16    TRUE   FALSE FALSE  5   53.25    64.35 103.18
       17   FALSE    TRUE FALSE  5   52.13    64.38 100.18
       18   FALSE    TRUE FALSE  5   52.12    64.19  99.81
#+end_example

Similar results for other methods.

** 3 stages
Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt3stage.info <- res3stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","stage","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt3stage.info[, type2 := factor(paste0(type,stage), c("interim1","decision1","interim2","decision2","final3"))]
tablePrint.3stage <- dcast(dt3stage.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type2,
                    value.var = "infoPC")
print(tablePrint.3stage, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar interim1 decision1 interim2 decision2 final3
        1    TRUE    TRUE FALSE 10    39.08     61.13    64.87     86.70 102.65
        2    TRUE    TRUE FALSE 10    39.08     61.04    64.66     86.27 102.16
        3    TRUE    TRUE FALSE  5    37.69     48.99    63.40     74.47 102.73
        4    TRUE    TRUE FALSE  5    37.69     48.93    63.17     74.09 102.19
        5    TRUE    TRUE  TRUE 10    39.08     61.13    64.87     86.70 102.65
        6    TRUE    TRUE  TRUE 10    39.08     61.04    64.66     86.27 102.16
        7    TRUE    TRUE  TRUE  5    37.69     48.99    63.40     74.47 102.73
        8    TRUE    TRUE  TRUE  5    37.69     48.93    63.17     74.09 102.19
        9    TRUE   FALSE  TRUE 10    38.85     60.43    64.52     85.88 102.34
       10    TRUE   FALSE  TRUE 10    38.85     61.18    64.76     90.06 102.97
       11    TRUE   FALSE  TRUE  5    37.47     48.55    63.08     73.93 102.43
       12    TRUE   FALSE  TRUE  5    37.47     49.96    63.30     75.12 103.00
       13    TRUE   FALSE FALSE 10    38.85     60.43    64.52     85.88 102.34
       14    TRUE   FALSE FALSE 10    38.85     61.18    64.76     90.06 102.97
       15    TRUE   FALSE FALSE  5    37.47     48.55    63.08     73.93 102.43
       16    TRUE   FALSE FALSE  5    37.47     49.96    63.30     75.12 103.00
       17   FALSE    TRUE FALSE  5    36.89     49.06    61.81     73.70  99.93
       18   FALSE    TRUE FALSE  5    36.89     48.91    61.69     73.42  99.67
#+end_example


* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [12pt]
#+OPTIONS:   title:t author:t toc:nil todo:nil
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t
#+LATEX_HEADER: %
#+LATEX_HEADER: %%%% specifications %%%%
#+LATEX_HEADER: %
** Latex command
#+LATEX_HEADER: \usepackage{ifthen}
#+LATEX_HEADER: \usepackage{xifthen}
#+LATEX_HEADER: \usepackage{xargs}
#+LATEX_HEADER: \usepackage{xspace}
#+LATEX_HEADER: \newcommand\Rlogo{\textbf{\textsf{R}}\xspace} % 
** Notations

** Code
# Documentation at https://org-babel.readthedocs.io/en/latest/header-args/#results
# :tangle (yes/no/filename) extract source code with org-babel-tangle-file, see http://orgmode.org/manual/Extracting-source-code.html 
# :cache (yes/no)
# :eval (yes/no/never)
# :results (value/output/silent/graphics/raw/latex)
# :export (code/results/none/both)
#+PROPERTY: header-args :session *R* :tangle yes :cache no ## extra argument need to be on the same line as :session *R*
# Code display:
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}
# ## change font size input
# ## #+ATTR_LATEX: :options basicstyle=\ttfamily\scriptsize
# ## change font size output
# ## \RecustomVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\tiny,formatcom = {\color[rgb]{0.5,0,0}}}
** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: \RequirePackage{setspace} % to modify the space between lines - incompatible with footnote in beamer
#+LaTeX_HEADER:\renewcommand{\baselinestretch}{1.1}
#+LATEX_HEADER:\geometry{top=2cm,bottom=3cm,left=1.5cm,right=1.5cm}
#+LATEX_HEADER: \RequirePackage{changepage}

#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
# ## valid and cross symbols
#+LaTeX_HEADER: \RequirePackage{pifont}
#+LaTeX_HEADER: \RequirePackage{relsize}
#+LaTeX_HEADER: \newcommand{\Cross}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{56}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\Valid}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{52}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\CrossR}{ \textcolor{red}{\Cross} }
#+LaTeX_HEADER: \newcommand{\ValidV}{ \textcolor{green}{\Valid} }
# ## warning symbol
#+LaTeX_HEADER: \usepackage{stackengine}
#+LaTeX_HEADER: \usepackage{scalerel}
#+LaTeX_HEADER: \newcommand\Warning[1][3ex]{%
#+LaTeX_HEADER:   \renewcommand\stacktype{L}%
#+LaTeX_HEADER:   \scaleto{\stackon[1.3pt]{\color{red}$\triangle$}{\tiny\bfseries !}}{#1}%
#+LaTeX_HEADER:   \xspace
#+LaTeX_HEADER: }
# # change the color of the links
#+LaTeX_HEADER: \hypersetup{
#+LaTeX_HEADER:  citecolor=[rgb]{0,0.5,0},
#+LaTeX_HEADER:  urlcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER:  linkcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER: }
** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files
#+LATEX_HEADER: \RequirePackage{capt-of} % 
#+LATEX_HEADER: \RequirePackage{caption} % newlines in graphics
** List
#+LATEX_HEADER: \RequirePackage{enumitem} % to be able to convert .eps to .pdf image files
** Color
#+LaTeX_HEADER: \definecolor{light}{rgb}{1, 1, 0.9}
#+LaTeX_HEADER: \definecolor{lightred}{rgb}{1.0, 0.7, 0.7}
#+LaTeX_HEADER: \definecolor{lightblue}{rgb}{0.0, 0.8, 0.8}
#+LaTeX_HEADER: \newcommand{\darkblue}{blue!80!black}
#+LaTeX_HEADER: \newcommand{\darkgreen}{green!50!black}
#+LaTeX_HEADER: \newcommand{\darkred}{red!50!black}
** Box
#+LATEX_HEADER: \usepackage{mdframed}
** Shortcut
#+LATEX_HEADER: \newcommand{\first}{1\textsuperscript{st} }
#+LATEX_HEADER: \newcommand{\second}{2\textsuperscript{nd} }
#+LATEX_HEADER: \newcommand{\third}{3\textsuperscript{rd} }
